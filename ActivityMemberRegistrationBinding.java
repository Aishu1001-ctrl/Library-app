// Generated by view binder compiler. Do not edit!
package com.example.library_app_java.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.library_app_java.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMemberRegistrationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText MemDOB;

  @NonNull
  public final EditText MemEmail;

  @NonNull
  public final EditText MemID;

  @NonNull
  public final EditText MemName;

  @NonNull
  public final TextView MemberTitle;

  @NonNull
  public final TextView memAddBackBtn;

  @NonNull
  public final MaterialButton memAddBtn;

  @NonNull
  public final RadioButton radioBorrowed;

  @NonNull
  public final RadioButton radioFemale;

  @NonNull
  public final RadioGroup radioGroupMemberGender;

  @NonNull
  public final RadioGroup radioGroupMemberStatus;

  @NonNull
  public final RadioButton radioMale;

  @NonNull
  public final RadioButton radioNotBorrowed;

  @NonNull
  public final TextView textViewMemberGender;

  @NonNull
  public final TextView textViewMemberStatus;

  private ActivityMemberRegistrationBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText MemDOB, @NonNull EditText MemEmail, @NonNull EditText MemID,
      @NonNull EditText MemName, @NonNull TextView MemberTitle, @NonNull TextView memAddBackBtn,
      @NonNull MaterialButton memAddBtn, @NonNull RadioButton radioBorrowed,
      @NonNull RadioButton radioFemale, @NonNull RadioGroup radioGroupMemberGender,
      @NonNull RadioGroup radioGroupMemberStatus, @NonNull RadioButton radioMale,
      @NonNull RadioButton radioNotBorrowed, @NonNull TextView textViewMemberGender,
      @NonNull TextView textViewMemberStatus) {
    this.rootView = rootView;
    this.MemDOB = MemDOB;
    this.MemEmail = MemEmail;
    this.MemID = MemID;
    this.MemName = MemName;
    this.MemberTitle = MemberTitle;
    this.memAddBackBtn = memAddBackBtn;
    this.memAddBtn = memAddBtn;
    this.radioBorrowed = radioBorrowed;
    this.radioFemale = radioFemale;
    this.radioGroupMemberGender = radioGroupMemberGender;
    this.radioGroupMemberStatus = radioGroupMemberStatus;
    this.radioMale = radioMale;
    this.radioNotBorrowed = radioNotBorrowed;
    this.textViewMemberGender = textViewMemberGender;
    this.textViewMemberStatus = textViewMemberStatus;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMemberRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMemberRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_member_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMemberRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.MemDOB;
      EditText MemDOB = ViewBindings.findChildViewById(rootView, id);
      if (MemDOB == null) {
        break missingId;
      }

      id = R.id.MemEmail;
      EditText MemEmail = ViewBindings.findChildViewById(rootView, id);
      if (MemEmail == null) {
        break missingId;
      }

      id = R.id.MemID;
      EditText MemID = ViewBindings.findChildViewById(rootView, id);
      if (MemID == null) {
        break missingId;
      }

      id = R.id.MemName;
      EditText MemName = ViewBindings.findChildViewById(rootView, id);
      if (MemName == null) {
        break missingId;
      }

      id = R.id.MemberTitle;
      TextView MemberTitle = ViewBindings.findChildViewById(rootView, id);
      if (MemberTitle == null) {
        break missingId;
      }

      id = R.id.mem_add_back_btn;
      TextView memAddBackBtn = ViewBindings.findChildViewById(rootView, id);
      if (memAddBackBtn == null) {
        break missingId;
      }

      id = R.id.mem_add_btn;
      MaterialButton memAddBtn = ViewBindings.findChildViewById(rootView, id);
      if (memAddBtn == null) {
        break missingId;
      }

      id = R.id.radio_Borrowed;
      RadioButton radioBorrowed = ViewBindings.findChildViewById(rootView, id);
      if (radioBorrowed == null) {
        break missingId;
      }

      id = R.id.radio_female;
      RadioButton radioFemale = ViewBindings.findChildViewById(rootView, id);
      if (radioFemale == null) {
        break missingId;
      }

      id = R.id.radio_group_member_gender;
      RadioGroup radioGroupMemberGender = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupMemberGender == null) {
        break missingId;
      }

      id = R.id.radio_group_member_status;
      RadioGroup radioGroupMemberStatus = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupMemberStatus == null) {
        break missingId;
      }

      id = R.id.radio_male;
      RadioButton radioMale = ViewBindings.findChildViewById(rootView, id);
      if (radioMale == null) {
        break missingId;
      }

      id = R.id.radio_NotBorrowed;
      RadioButton radioNotBorrowed = ViewBindings.findChildViewById(rootView, id);
      if (radioNotBorrowed == null) {
        break missingId;
      }

      id = R.id.textView_member_gender;
      TextView textViewMemberGender = ViewBindings.findChildViewById(rootView, id);
      if (textViewMemberGender == null) {
        break missingId;
      }

      id = R.id.textView_member_status;
      TextView textViewMemberStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewMemberStatus == null) {
        break missingId;
      }

      return new ActivityMemberRegistrationBinding((RelativeLayout) rootView, MemDOB, MemEmail,
          MemID, MemName, MemberTitle, memAddBackBtn, memAddBtn, radioBorrowed, radioFemale,
          radioGroupMemberGender, radioGroupMemberStatus, radioMale, radioNotBorrowed,
          textViewMemberGender, textViewMemberStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
